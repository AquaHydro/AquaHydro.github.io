name: Pages

on:
  push:
    branches:
      - main # default branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # If your repository depends on submodule, please see: https://github.com/actions/checkout
          submodules: recursive
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node
          # Ref: https://github.com/actions/setup-node#supported-version-syntax
          node-version: '20'
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache
          restore-keys: |
            ${{ runner.OS }}-npm-cache
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Refresh Tencent Cloud CDN
        env:
          SECRET_ID: ${{ secrets.SECRETID }}
          SECRET_KEY: ${{ secrets.SECRETKEY }}
          CDN_DOMAIN: your-cdn-domain.com  # 这里填入你的 CDN 加速域名
        run: |
          TIMESTAMP=$(date +%s)
          NONCE=$(od -vAn -N4 -tu4 < /dev/urandom)
          HOST="cdn.tencentcloudapi.com"
          ACTION="PurgePathCache"
          VERSION="2018-06-06"
          SERVICE="cdn"
          HTTP_REQUEST_METHOD="POST"
          
          # 生成签名字符串
          CANONICAL_REQUEST="${HTTP_REQUEST_METHOD}\n/\n\ncontent-type:application/json\nhost:${HOST}\n\ncontent-type;host\n$(echo -n "{\"Action\":\"${ACTION}\",\"Version\":\"${VERSION}\",\"SecretId\":\"${SECRET_ID}\",\"Timestamp\":${TIMESTAMP},\"Nonce\":${NONCE},\"Paths\":[\"https://${CDN_DOMAIN}/*\"],\"FlushType\":\"flush\"}" | openssl dgst -sha256 -hex | sed 's/^.* //')"
          
          STRING_TO_SIGN="TC3-HMAC-SHA256\n${TIMESTAMP}\n${TIMESTAMP}/cdn/tc3_request\n$(echo -n "${CANONICAL_REQUEST}" | openssl dgst -sha256 -hex | sed 's/^.* //')"
          
          SECRET_DATE=$(echo -n "${TIMESTAMP}" | openssl dgst -sha256 -hmac "TC3${SECRET_KEY}" | sed 's/^.* //')
          SECRET_SERVICE=$(echo -n "cdn" | openssl dgst -sha256 -hmac "${SECRET_DATE}" | sed 's/^.* //')
          SECRET_SIGNING=$(echo -n "tc3_request" | openssl dgst -sha256 -hmac "${SECRET_SERVICE}" | sed 's/^.* //')
          
          SIGNATURE=$(echo -n "${STRING_TO_SIGN}" | openssl dgst -sha256 -hmac "${SECRET_SIGNING}" | sed 's/^.* //')
          
          curl -X POST "https://${HOST}" \
          -H "Content-Type: application/json" \
          -H "Host: ${HOST}" \
          -H "X-TC-Action: ${ACTION}" \
          -H "X-TC-Timestamp: ${TIMESTAMP}" \
          -H "X-TC-Version: ${VERSION}" \
          -H "Authorization: TC3-HMAC-SHA256 Credential=${SECRET_ID}/${TIMESTAMP}/cdn/tc3_request, SignedHeaders=content-type;host, Signature=${SIGNATURE}" \
